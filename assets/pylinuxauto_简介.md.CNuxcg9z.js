import{_ as s,c as a,a as t,U as i,o as e}from"./chunks/framework.DLC3mPHA.js";const g=JSON.parse('{"title":"PyLinuxAuto","description":"","frontmatter":{},"headers":[],"relativePath":"pylinuxauto/简介.md","filePath":"pylinuxauto/简介.md","lastUpdated":1719891850000}'),n={name:"pylinuxauto/简介.md"},l=i('<h1 id="pylinuxauto" tabindex="-1">PyLinuxAuto <a class="header-anchor" href="#pylinuxauto" aria-label="Permalink to &quot;PyLinuxAuto&quot;">​</a></h1><p>Linux GUI Automation with Python 🔥</p><hr><div style="float:left;"><img src="https://img.shields.io/badge/python-007CFF?style=for-the-badge&amp;logo=python&amp;logoColor=white"></div><div style="float:left;"> </div><div style="float:left;"><img src="https://img.shields.io/badge/Linux-007CFF?style=for-the-badge&amp;logo=linux&amp;logoColor=white"></div><div style="float:left;"> </div><div style="float:left;"><img src="https://img.shields.io/badge/Deepin-007CFF?style=for-the-badge&amp;logo=deepin&amp;logoColor=white"></div><br><br>',10),p=i(`<h2 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pylinuxauto</span></span></code></pre></div><h2 id="使用说明" tabindex="-1">使用说明 <a class="header-anchor" href="#使用说明" aria-label="Permalink to &quot;使用说明&quot;">​</a></h2><p>4 种元素定位方法</p><h3 id="使用-accessibility-操作元素" tabindex="-1">使用 Accessibility 操作元素 <a class="header-anchor" href="#使用-accessibility-操作元素" aria-label="Permalink to &quot;使用 Accessibility 操作元素&quot;">​</a></h3><p>通过 Accessibility 路径查找并操作元素，路径名称可以通过 sniff 命令查看。</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pylinuxauto</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pylinuxauto.find_element_by_attr_path(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/dde-doc/Btn_文件管理器&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).click()</span></span></code></pre></div><h3 id="使用图像识别操作元素" tabindex="-1">使用图像识别操作元素 <a class="header-anchor" href="#使用图像识别操作元素" aria-label="Permalink to &quot;使用图像识别操作元素&quot;">​</a></h3><p>传入一张目标图片的路径，自动在当前屏幕中查找目标图片。</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pylinuxauto</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pylinuxauto.find_element_by_image(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;~/Desktop/template.png&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).click()</span></span></code></pre></div><h3 id="使用-ocr-操作元素" tabindex="-1">使用 OCR 操作元素 <a class="header-anchor" href="#使用-ocr-操作元素" aria-label="Permalink to &quot;使用 OCR 操作元素&quot;">​</a></h3><p>使用传入需要识别的文本字符，使用 OCR 在当前屏幕中识别。</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pylinuxauto</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pylinuxauto.find_element_by_ocr(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;中国&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).click()</span></span></code></pre></div><h3 id="使用-ui-相对位移操作元素" tabindex="-1">使用 UI 相对位移操作元素 <a class="header-anchor" href="#使用-ui-相对位移操作元素" aria-label="Permalink to &quot;使用 UI 相对位移操作元素&quot;">​</a></h3><p>通过将目标按钮相对于应用窗口的位置信息配置到 ini 文件里面，然后动态获取应用窗口在当前屏幕中的信息，最后计算出目标按钮在当前屏幕中的位置。</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pylinuxauto</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pylinuxauto.find_element_by_ui(</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    appname</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;dde-file-manager&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    config_path</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;~/Desktop/ui.ini&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    btn_name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;最大化按钮&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).click()</span></span></code></pre></div><h2 id="开源许可证" tabindex="-1">开源许可证 <a class="header-anchor" href="#开源许可证" aria-label="Permalink to &quot;开源许可证&quot;">​</a></h2><p>PyLinuxAuto 在 GPL-2.0 下发布。</p>`,18);function h(o,d,k,r,c,u){return e(),a("div",null,[l,t(" PyLinuxAuto 是一个用于 Linux 桌面 GUI 自动化测试的 Python 模块，支持多种元素定位方法和键鼠操作。 "),p])}const E=s(n,[["render",h]]);export{g as __pageData,E as default};
