import{_ as s,c as a,o as i,U as t}from"./chunks/framework.DLC3mPHA.js";const F=JSON.parse('{"title":"前后钩子","description":"","frontmatter":{},"headers":[],"relativePath":"指南/与生俱来/前后钩子.md","filePath":"指南/与生俱来/前后钩子.md","lastUpdated":1720174140000}'),e={name:"指南/与生俱来/前后钩子.md"},h=t(`<h1 id="前后钩子" tabindex="-1">前后钩子 <a class="header-anchor" href="#前后钩子" aria-label="Permalink to &quot;前后钩子&quot;">​</a></h1><p>YouQu3 提供灵活的前后钩子机制。</p><h2 id="前置钩子" tabindex="-1">前置钩子 <a class="header-anchor" href="#前置钩子" aria-label="Permalink to &quot;前置钩子&quot;">​</a></h2><h3 id="前置脚本钩子" tabindex="-1">前置脚本钩子 <a class="header-anchor" href="#前置脚本钩子" aria-label="Permalink to &quot;前置脚本钩子&quot;">​</a></h3><p>在用例工程目录下存放一个 <code>job_start.py</code> 的脚本，框架会在用例执行之前自动加载并执行。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark has-focused-lines vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">my_case</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> case</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> method</span></span>
<span class="line has-focus"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> job_start.py</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">...</span></span></code></pre></div><h3 id="前置命令行入参钩子" tabindex="-1">前置命令行入参钩子 <a class="header-anchor" href="#前置命令行入参钩子" aria-label="Permalink to &quot;前置命令行入参钩子&quot;">​</a></h3><p>框架支持通过 <code>--job-start</code> 入参，参数值可以传递任意命令行命令，框架会在用例执行之前执行。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">youqu3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --job-start</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;python3 do_what_you_want_do.py&quot;</span></span></code></pre></div><p>就像写 Shell 脚本一样即可：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">youqu3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --job-start</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;sudo apt install htop;git clone ...&quot;</span></span></code></pre></div><h2 id="后置钩子" tabindex="-1">后置钩子 <a class="header-anchor" href="#后置钩子" aria-label="Permalink to &quot;后置钩子&quot;">​</a></h2><h3 id="后置脚本钩子" tabindex="-1">后置脚本钩子 <a class="header-anchor" href="#后置脚本钩子" aria-label="Permalink to &quot;后置脚本钩子&quot;">​</a></h3><p>在用例工程目录下存放一个 <code>job_start.py</code> 的脚本，框架会在用例执行之前自动加载并执行。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark has-focused-lines vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">my_case</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> case</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> method</span></span>
<span class="line has-focus"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> job_end.py</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">...</span></span></code></pre></div><h3 id="后置命令行入参钩子" tabindex="-1">后置命令行入参钩子 <a class="header-anchor" href="#后置命令行入参钩子" aria-label="Permalink to &quot;后置命令行入参钩子&quot;">​</a></h3><p>框架支持通过 <code>--job-end</code> 入参，参数值可以传递任意命令行命令，框架会在用例执行之前执行。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">youqu3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --job-end</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;python3 do_what_you_want_do.py&quot;</span></span></code></pre></div><p>就像写 Shell 脚本一样即可：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">youqu3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --job-end</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;sudo apt install htop;git clone ...&quot;</span></span></code></pre></div><h2 id="" tabindex="-1"><a class="header-anchor" href="#" aria-label="Permalink to &quot;&quot;">​</a></h2>`,21),n=[h];function l(p,o,d,k,r,c){return i(),a("div",null,n)}const g=s(e,[["render",l]]);export{F as __pageData,g as default};
